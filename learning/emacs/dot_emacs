; start package.el with emacs
(require 'package)
; add MeLPA to repository list
(add-to-list 'package-archives '("melpa" ."http://melpa.milkbox.net/packages/"))
; initialize the package
(package-initialize)
; start auto-complete with emacs
(require 'auto-complete)
; do default config for auto-complete
(require 'auto-complete-config)
(ac-config-default)
; start yasnippet
(require 'yasnippet)
(yas-global-mode 1)
; auto-revert-mode
(global-auto-revert-mode t)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector ["#2e3436" "#a40000" "#4e9a06" "#c4a000" "#204a87" "#5c3566" "#729fcf" "#eeeeec"])
 '(column-number-mode t)
 '(custom-enabled-themes (quote (adwaita)))
 '(inhibit-startup-screen t)
 '(show-paren-mode t)
 '(tool-bar-mode nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "DejaVu Sans" :foundry "unknown" :slant normal :weight normal :height 143 :width normal)))))
;; hide tool-bar
;(tool-bar-mode 1) ; uncommment to show bar
(tool-bar-mode -1)
; hide menu bar
;(menu-bar-mode 1)
; show line numbering
;; open file in zyousa/emacs dir 
(fset ':learn-emacs
   [?\C-x ?\C-f ?\C-  ?\C-a backspace ?~ ?/ ?z ?y ?o ?u ?s ?a ?f ?/ ?p ?r ?o ?g ?r ?a ?m ?m ?i ?n ?g ?/ ?e ?m ?a ?c ?s ?/ ?l ?e ?a ?r ?n ?_ ?e ?m ?a ?c ?s ?. ?t ?x ?t return ?\M->])
;; macro for printing a line (_print-this)
(fset '_print-this
   (lambda (&optional arg) "Keyboard macro." (interactive "p") (kmacro-exec-ring-item (quote ("	cout << \" \\n\";" 0 "%d")) arg)))

;; disable scroll bar
(scroll-bar-mode -1)
(put 'narrow-to-region 'disabled nil)
;; enabling bable languages
(org-babel-do-load-languages
 'org-babel-load-languages '((C . t)))
;; babale org mode for sh
(org-babel-do-load-languages
 'org-babel-load-languages '((sh . t)))
;; for Python
(org-babel-do-load-languages
 'org-babel-load-languages '((python . t)))
;; macro for compile and run a make file and run in separate buffer
(fset ':compile
   "\C-x\C-s\370compile")

;; set global key for :compile as shortcut
(global-set-key (kbd "C-,") ':compile)
;; kbd-macro to open cpp test file
(fset ':test-cpp
   [?\C-x ?\C-f ?D ?e ?s ?k ?t ?o ?p ?/ ?t ?e ?s ?t ?/ ?c ?p ?p ?/ ?t ?e ?s ?t ?_ ?m ?a ?i ?n ?. ?c ?p ?p return])
;; M-j for 'jump-to-register'
(global-set-key (kbd "M-j") 'jump-to-register)
;; M-p for 'point-to-register'
(global-set-key (kbd "M-p") 'point-to-register)
;; go to folder for assembly language
(fset ':write-assembly
   "\C-x\C-f/home/zaeem/git/challenge/Fast/cs_semester_3/coal_lab")

